@import './variables';
@import './mixins';

  @include font-face('bitstream_vera_sansroman', '/fonts/vera-webfont');
  @include font-face('blogger_sansregular', '/fonts/blogger_sans-webfont');
  @include font-face('blogger_sansmedium', '/fonts/blogger_sans-medium-webfont');
  @include font-face('source_sans_prolight', '/fonts/sourcesanspro-light-webfont');
  @include font-face('source_sans_proregular', '/fonts/sourcesanspro-regular-webfont');
  @include font-face('jollygood_sansbasic', '/fonts/jollygoodsans-basic-webfont');

  $margin: 14px;
  $min_width: 320px;
  $max_width: 1200px;
  $min_font: 14px;
  $max_font: 26px;
  
  :root {
    @include fluid-type($min_width, $max_width, $min_font, $max_font);
  }

  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: $blogger-sans;
    @include fluid-type($min_width, $max_width, $min_font, $max_font);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  html, body {
    width: 100%;
    height: 100%;
    background-color: $white;
  }

  table {
    border-collapse: collapse;
    border-spacing: 0;
  }

  /* Needs to be refined */
  h1, h2, h3, h4, h5, h6 {
    line-height: 1.1;
    margin: .6rem;
  }

  button {
      background-color: $white;
      color: $logo-gray;
      font-weight: bold;
      padding: 10px 20px;
      text-transform: uppercase;
      box-shadow: 0.2rem 0.2rem 0 rgba(238, 238, 238, 0.1), 0.4rem 0.4rem 0 rgba(128,127,126,.2);
  }

  .quizdini-app {
    @include flexbox;
    @include flex-direction(column);
    position: relative;
    min-height: 100vh;
    background-color: $gray-light;
    background-image: url("https://www.transparenttextures.com/patterns/sandpaper.png");
  }

  .page-container {
    position: relative;
    width: 100%;
    height: 100vh;
    overflow-y: visible;
    overflow-x: hidden;
    max-width: 1200px;
    margin: 0 auto;
  }
  
  @include keyframes(spin-scale) {
    0% { transform: rotate(0deg) scale(1.0); } 
    15% { transform: rotate(-360deg) scale(.99); }
    30% { transform: rotate(0deg) scale(1.0); } 
  }

  .spin-scale {
    @include animation('spin-scale 15s ease-in-out 1s infinite normal both running');
  }

  @include keyframes(scale) {
    0% { transform: scale(1.0); } 
    15% { transform: scale(.99); }
    30% { transform: scale(1.0); }
  }

  .scale {
    @include animation('scale 15s ease-in-out 1s infinite normal both running');
  }

  .game-title {
    font-family: $blogger-sans-medium;
  }

  .game-author, .game-instructions {
    font-family: $blogger-sans;
  }

  .term, .definition {
    @include flexbox;
    @include justify-content(center);
    @include align-items(center);
    min-width: 0;
    width: 80%;
    margin:  #{$margin / 8}; 
    margin: calc(100vmax / 320);
    @include user-select(none);
    z-index: 102;
  }
  
  .term {

    border-radius: 2px;
    padding: 3px;
    background-image: url("https://www.transparenttextures.com/patterns/brilliant.png"); 
    background-repeat: repeat; 

    -webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  -moz-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  -ms-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  -o-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
    /* This is mostly intended for prototyping; please download the pattern and re-host for production environments. Thank you! */

    /*border: calc(2px + (100vw / 640)) solid $white; */
   /* border-radius: calc(1px + (100vw / 420)); */

  /* -webkit-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  -moz-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  -ms-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  -o-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23); */

  /*-webkit-transition: box-shadow 0.25s ease-in-out !important;
  -moz-transition:  box-shadow 0.25s ease-in-out  !important;
  -ms-transition: box-shadow 0.25s ease-in-out  !important;
  -o-transition: box-shadow 0.25s ease-in-out  !important;
  transition: box-shadow 0.25s ease-in-out  !important; */
    
    /* Colors for tiles */
    $tileColors: (('red', $red, $white, $white-alpha9),
                  ('orange', $orange, $white, $white-alpha9),
                  ('yellow', $yellow, $logo-gray, $black-alpha4),
                  ('lime', $lime, $logo-gray, $black-alpha4),
                  ('green', $green, $white, $white-alpha9),
                  ('cyan', $cyan, $logo-gray, $black-alpha4),
                  ('blue', $blue, $white, $white-alpha9),
                  ('purple', $purple, $white, $white-alpha9),
                  ('magenta', $magenta, $white, $white-alpha9),
                  ('gray', $gray, $white, $white-alpha9),
                  ('navy', $navy, $white, $white-alpha9),
                  ('teal', $teal, $white, $white-alpha9)
                 );
    
    /* Dynamically generate tile color classes */            
    @each $color, $background, $textColor, $borderColor in $tileColors {
      &.#{$color} {
        background-color: #{$background};
        color: #{$textColor};
      }



      &.#{$color}:hover, &.#{$color}.dragging {
        border: 3px solid $borderColor;
        transform: scale(1.06, 1.06);
        transition: transform .1s cubic-bezier(.25,.8,.25,1) !important;
      }

      &.#{$color}.dragging {
        text-transform: uppercase;
      }

    }
  }

  .term:hover {
    -webkit-box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
  -moz-box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
  -ms-box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
  -o-box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
  }

  .definition {
    /*border: calc(1px + (100vw / 420)) dashed $logo-white;
    border-radius: calc(2px + (100vw / 320)); */
    border-radius: 2px;
    padding: 3px;
    background-color: $gray-light-light;
    touch-action: none;
    background-color: $logo-white;
background-image:
linear-gradient(90deg, transparent 23px, #abced4 23px, #abced4 25px, transparent 25px),
linear-gradient(#eee .1em, transparent .1em);
background-size: 100% 1.2em;
-webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  -moz-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  -ms-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  -o-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  }

  .term-text, .definition-text {
    margin: auto;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  
  .term-text {
    background: inherit;
    min-height: 1.1rem;
    padding: .15rem .35rem;
    font-family: 'Rubik';
    line-height: 1.1;
    font-weight: bold;
    font-size: .9rem;
    /* text-shadow: .08rem .08rem .05rem rgba(128,128,128,0.10); */
  }

  .definition-text {
    min-height: 1.3rem;
    padding: .15rem .35rem;
    font-family: $jolly-good-sans;
    line-height: 1.3;
    color: $graphite;
    /*font-style: italic; */
    font-weight: bold;
    font-size: 0.8rem;
  }

  .term.matched, .definition.matched {
    background-color: $white !important;
    border-color: $bright-green !important;
  } 

  .term.matched > .term-text, 
  .definition.matched > .definition-text {
    color: $bright-green !important;
    text-shadow: none !important;
  }


  .term.expand,
  .definition.expand,
  {
    z-index: 103;
    overflow: visible; 
    max-height: none !important;
    border: none;
  }

  .term.expand { 
    border: 3px solid $white;
  }

  .definition.expand {
    border: 3px solid $graphite;
  }

  .term.expand > .term-text,
  .definition.expand > .definition-text,
   {
    max-height: none !important;
    background-color: inherit;
    overflow: visible;
  }  

  .dragging {
    opacity: .9 !important;
    /*color: $logo-black; */
    /* background-color: $logo-white; */
    text-transform: uppercase;
  }
  
  .is-over {
    border-color: $yellow;
  }

  #splash-container {
    width: calc(100% - #{$margin * 2});
    height: 91vh;
  }

  #splash {
    background-color: $blue;
    color: $white;
  }
  
  #badge-logo {
    position: relative;
    @include fluid-logo($min_width, $max_width, 175px, 400px);
  }

  #badge-logo img {
    position: absolute;
    top: 0;
    left: 0;
  }
  
  #badge-logo img#logo {
    z-index: 1001;
  }

  #match-topic::after {
    content: '\00A0\00B7\00A0'
  }

  #scoreboard {
    position: relative;
    position: sticky;
    display: block;
    top: 0;
    width: 100%;
    opacity: 0.95;
    background-color: $blue;
    color: $white;
    border-bottom: 1px solid rgba(0,0,0,.1);
    z-index: 1001;
  }

  #match-container #computer-stars, #match-container #computer {
    display: none;
  }

  #match-board { 
    @include flexbox;
    @include flex-direction(column);
    @include justify-content(flex-end);
    min-height: calc(60%);
    width: 100%;
    margin: 1vh auto;
  }

  #term-container, #definition-container {
    @include flexbox;
    @include flex-direction(column);
    @include justify-content(center);
    @include align-items(center);
    min-height: 45vh;
    overflow-y: visible;
  }

  @media (min-width: 360px) { 
  }

  @media (max-device-width: 960px) and (orientation: landscape) {
    
    #match-board { 
       min-height: calc(92vh);
       width: 100%;
       margin: 0 auto;
       @include justify-content(flex-start);
       @include align-items(center);
    }

    #term-container, #definition-container {
      min-height: 40vh;
      width: 96%;
      margin: 2vh 0 1vh;
      @include align-items(flex-start);
      @include justify-content(center);
      @include flex-direction(row);
      @include flex-wrap(wrap);
      @include align-content(center);
    }

    .term, .definition {
      max-width: 30vw;
      min-height: 6vw;
      @include flex-basis(30vw);
      @include flex-grow(0);
    }

  }

  @media (min-width: 576px) {
     
  }

  @media (min-width: 768px) { 
    #scoreboard {
      position: relative;
      /* min-height: calc(10vh + 20px); */
    }
  }

  @media (min-width: 1200px) {
    
    .page-container {
      max-width: none;
    }

    #splash {
      border: 1.3rem solid $white;
      @include box-shadow(.6rem .6rem .6rem #CCC, 0 0 .4rem rgba(238, 238, 238,.4) inset);
    }

    #scoreboard {
      display: none;
    }

    #match-board { 
      @include flex-direction(row);
      @include justify-content(flex-start);
      @include align-items(center);
      min-height: calc(60%);
      position: absolute;
      top: 5vh;
   }

   #term-container, #definition-container {
     min-height: 0;
     width: 50%;
     margin: 2vh 0;
     @include align-items(flex-start);
     @include justify-content(center);
     @include flex-direction(row);
     @include flex-wrap(wrap);
     @include justify-content(center);
     @include align-content(center);
   }

    #term-container {
      padding-left: 2vw;
    }

    #definition-container {
      padding-right: 2vw;
    }

    #match-container #computer {
      display: block;
      z-index: 100;
      display: block;
      max-width: 230px;
      width: 12%;
      position: absolute;
      bottom: 0 !important;
      //left: calc(50% - 115px) !important; // Subtract half of logo's width
      right: 6%;
    }

    #match-container #computer-stars {
      display: block;
      z-index: 99;
      max-width: 500px;
      width: 26%;
      position: absolute;
      bottom: 10px !important; 
      //left: calc(50% - 225px) !important; // Subtract half of stars' width
      right: -1%;
      //transform: rotate(-180deg);
    }

    .timer {
      position: absolute;
      bottom: 2vh !important;
      left: calc(50vw - 5rem);
      width: 10rem;
      z-index: 104;
      background-color: $logo-black;
      color: $white;
      line-height: 1.2;
      font-size: 3rem;
      font-weight: bold;
      text-align: center;
    }

    .correct {
      position: absolute;
      bottom: 2vh !important;
      right: 5vw;
      min-width: 4rem;
      z-index: 104;
      background-color: $logo-black;
      color: $lime;
      line-height: 1.2;
      font-size: 3rem;
      font-weight: bold;
      text-align: center;
    }

    .incorrect {
      position: absolute;
      bottom: 2vh !important;
      left: 5vw;
      min-width: 4rem;
      z-index: 104;
      background-color: $logo-black;
      color: $red;
      line-height: 1.2;
      font-size: 3rem;
      font-weight: bold;
      text-align: center;
    }

   .term, .definition {
     width: 14vw;
     height: 8vw;
     min-height: 3.6rem;
     margin: .3rem;
     @include flex-basis(14vw);
     @include flex-grow(0);
     overflow: hidden;
   }

   .term-text, .definition-text {
     white-space: normal;
   }

  .term-text {
    min-height: 1.3rem ;
    max-height: 4.1rem ;
  }

  .definition-text {
     min-height: 1.3rem ;
     max-height: 3.7rem ;
   }

  }