@import './variables';
@import './mixins';

  @include font-face('bitstream_vera_sansroman', '/fonts/vera-webfont');
  @include font-face('blogger_sansregular', '/fonts/blogger_sans-webfont');
  @include font-face('blogger_sansmedium', '/fonts/blogger_sans-medium-webfont');

  $margin: 15px;
  $min_width: 320px;
  $max_width: 1200px;
  $min_font: 16px;
  $max_font: 26px;
  
  :root {
    @include fluid-type($min_width, $max_width, $min_font, $max_font);
  }

  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: $blogger-sans;
    @include fluid-type($min_width, $max_width, $min_font, $max_font);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  html, body {
    width: 100%;
    height: 100%;
    background-color: $gray-light-light;
  }


  /* Needs to be refined */
  h1, h2, h3, h4, h5, h6 {
    line-height: 1.1;
    margin: .6em;
  }

  button {
      background-color: $white;
      color: $logo-gray;
      font-weight: bold;
      padding: 10px 20px;
      text-transform: uppercase;
      box-shadow: 0.2rem 0.2rem 0 rgba(238, 238, 238, 0.1), 0.4rem 0.4rem 0 rgba(128,127,126,.2);
  }

  .quizdini-app {
    height: 100vh;
    overflow-y: visible;
    background-color: $blue-light;
  }
  
  @include keyframes(spin-scale) {
    0% { transform: rotate(0deg) scale(1.0); } 
    15% { transform: rotate(-360deg) scale(.99); }
    30% { transform: rotate(0deg) scale(1.0); } 
  }

  .spin-scale {
    @include animation('spin-scale 15s ease-in-out 1s infinite normal both running');
  }

  @include keyframes(scale) {
    0% { transform: scale(1.0); } 
    15% { transform: scale(.99); }
    30% { transform: scale(1.0); }
  }

  .scale {
    @include animation('scale 15s ease-in-out 1s infinite normal both running');
  }

  .game-title {
    font-family: $blogger-sans-medium;
  }

  .game-author, .game-instructions {
    font-family: $blogger-sans;
  }

  .term, .definition {
    @include flexbox;
    @include justify-content(center);
    @include align-items(center);
    width: 80%;
    margin:  #{$margin / 8}; 
    margin: calc(100vmax / 320);
    @include user-select(none);
  }
  
  .term {
    min-width: 0;
    background-color: $violet;
    font-family: $bitstream-vera-sans;
    font-weight: bold;
    font-size: .8rem;
    border: #{$margin / 8} solid $white;
    border: #{$margin / calc(100vmax / 320)} solid $white;
    color: $white;
    /* box-shadow: 0.2rem 0.2rem 0, 0.4rem 0.4rem 0 rgba(0,0,0,.2); */
    
    /* Colors for tiles */
    $tileColors: (('pink', $pink, $pink-dark),
                  ('green', $green, $green-dark),
                  ('blue', $blue, $blue-dark),
                  ('purple', $violet, $purple),
                  ('orange', $orange, $orange-dark),
                  ('asphalt', $asphalt, $asphalt-dark),
                  ('green-sea', $green-sea, $green-sea-dark));
    
    /* Dynamically generate tile color classes */            
    @each $color, $bgColor, $hoverBgColor in $tileColors {
      &.#{$color} {
        background-color: #{$bgColor};
        &:hover {
          background-color: #{$hoverBgColor};
        }
      }
    }
  }
  
  .definition {
    min-width: 0;
    background-color: $white;
    font-family: $blogger-sans-medium;
    font-size: .7rem;
    font-weight: bold;
    border: 3px dashed $gray-light;
    color: $gray-dark;
  }

  .term-text, .definition-text {
    padding: #{$margin / 8}; 
    padding: calc(100vmax / 320); 
    line-height: 1.2;
    min-height: 1.2em;
    margin: auto;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .term.expand,
  .definition.expand,
  .term:hover,
  .definition:hover
  {
    z-index: 100;
    overflow: visible; 
    max-height: none !important;
  }

  .term.expand > .term-text,
  .definition.expand > .definition-text,
  .term:hover > .term-text, 
  .definition:hover > .definition-text {
    max-height: none !important;
    background-color: inherit;
    border: 3px solid $yellow;
  }

  .dragging {
    opacity: 0.5 !important;
    color: $gray;
    box-shadow: 0.25rem 0.25rem 0, 0.48rem 0.48rem 0 rgba(0,0,0,.2);
  }
  
  .is-over {
    border-color: $gray;
  }

  #splash-container {
    width: calc(100% - #{$margin * 2});
    height: 91vh;
  }

  #splash {
    background-color: $blue-light;
    color: $white;
  }
  
  #badge-logo {
    position: relative;
    @include fluid-logo($min_width, $max_width, 175px, 400px);
  }

  #badge-logo img {
    position: absolute;
    top: 0;
    left: 0;
  }
  
  #badge-logo img#logo {
    z-index: 1001;
  }

  #match-topic::after {
    content: '\00A0\00B7\00A0'
  }

  #match-container {
    width: 100%;
    height: 100%;
    overflow: visible;
    background-color: $gray-light-light;
  }

  #match-board { 
    @include flexbox;
    @include flex-direction(column);
    @include justify-content(flex-end);
    min-height: calc(92vh);
    width: 100%;
    margin: 1vh auto;
  }

  #term-container, #definition-container {
    @include flexbox;
    @include flex-direction(column);
    @include justify-content(center);
    @include align-items(center);
    min-height: 45vh;
    overflow-y: visible;
  }

  #scoreboard {
    position: relative;
    position: sticky;
    display: block;
    top: 0;
    width: 100%;
    opacity: 0.95;
    background-color: $blue;
    color: $white;
    border-bottom: 1px solid rgba(0,0,0,.1);
    z-index: 1001;
  }

  @media (min-width: 360px) { 
  }

  @media (max-device-width: 960px) and (orientation: landscape) {
    
    #match-board { 
       min-height: calc(92vh);
       width: 100%;
       margin: 0 auto;
       @include justify-content(flex-start);
       @include align-items(center);
    }

    #term-container, #definition-container {
      min-height: 40vh;
      width: 96%;
      margin: 2vh 0 1vh;
      @include align-items(flex-start);
      @include justify-content(center);
      @include flex-direction(row);
      @include flex-wrap(wrap);
      @include align-content(center);
    }

    .term, .definition {
      max-width: 30vw;
      min-height: 6vw;
      @include flex-basis(30vw);
      @include flex-grow(0);
    }

  }

  @media (min-width: 576px) {
     
  }

  @media (min-width: 768px) { 
    #scoreboard {
      position: relative;
      /* min-height: calc(10vh + 20px); */
    }
  }

  @media (min-width: 1200px) {
    
    .quizdini-app {
      background-color: $gray-light-light;
    }

    #splash {
      border: 1.3rem solid $white;
      @include box-shadow(.6rem .6rem .6rem #CCC, 0 0 .4rem rgba(238, 238, 238,.4) inset);
    }

    #match-board { 
      min-height: calc(92vh);
      width: 100%;
      margin: 0 auto;
      @include flex-direction(row);
      @include justify-content(flex-start);
      @include align-items(center);
   }

   #term-container, #definition-container {
     min-height: 0;
     width: 50%;
     margin: 2vh 0;
     @include align-items(flex-start);
     @include justify-content(center);
     @include flex-direction(row);
     @include flex-wrap(wrap);
     @include align-content(center);
   }

   .term, .definition {
     width: 12vw;
     height: 8vw;
     min-height: 3.6em;
     @include flex-basis(12vw);
     @include flex-grow(0);
     overflow: hidden;
   }

   .term-text, .definition-text {
     white-space: normal;
     display: -webkit-box !important;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;  
     min-height: 1.2em ;
     max-height: 3.6em ;
   }

  }